{"ast":null,"code":"var _jsxFileName = \"/home/usmael/Desktop/React/simple-employee-management-system/src/pages/employeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport Filter from '../components/FilterTable';\nimport { Table, Container, TableHeader, TableBody, TableData, TableHead, TableRow, Button } from '../components/table.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [Employee, setEmployee] = useState([]);\n  const fetchEmployees = async () => {\n    const response = await axios.get('https://63bdda61e348cb076204aebb.mockapi.io/api/v1/employee-data').catch(err => console.log(err));\n    if (response) {\n      const employees = response.data;\n      console.log(\"employees\", employees);\n      setEmployee(employees);\n    }\n  };\n  const columns = useMemo(() => [{\n    Header: \"First Name\",\n    accessor: \"firstName\"\n  }, {\n    Header: \"Last Name\",\n    accessor: \"lastName\"\n  }, {\n    Header: \"Age\",\n    accessor: \"age\"\n  }, {\n    Header: \"Gender\",\n    accessor: \"Gender\"\n  }, {\n    Header: \"email\",\n    accessor: \"email\"\n  }], []);\n  const employeesData = useMemo(() => [...Employee], [Employee]);\n  const employeesColumns = useMemo(() => Employee[0] ? Object.keys(Employee[0]).filter(key => key !== \"rating\").map(key => {\n    if (key === \"image\") return {\n      Header: key,\n      accessor: key,\n      Cell: _ref => {\n        let {\n          value\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }, this);\n      },\n      maxWidth: 70\n    };\n    return {\n      Header: key,\n      accessor: key\n    };\n  }) : [], [Employee]);\n  const tableHooks = hooks => {\n    hooks.visibleColumns.push(columns => [...columns, {\n      id: \"Edit\",\n      Header: \"Edit\",\n      Cell: _ref2 => {\n        let {\n          row\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => alert(\"Editing: \" + row.values.price),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      }\n    }]);\n  };\n  const tableInstance = useTable({\n    columns: employeesColumns,\n    data: employeesData\n  }, useGlobalFilter, tableHooks, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    preFilteredRows,\n    setFilter,\n    state\n  } = tableInstance;\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  const isEven = idx => idx % 2 === 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        preFilteredRows: preFilteredRows,\n        setFilter: setFilter,\n        Filter: state.Filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableHeader, {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? \" ▼\" : \" ▲\" : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          ...getTableBodyProps(),\n          children: rows.map((row, idx) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              ...row.getRowProps(),\n              className: isEven(idx) ? \"bg-green-400 bg-opacity-30\" : \"\",\n              children: row.cells.map((cell, idx) => /*#__PURE__*/_jsxDEV(TableData, {\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EmployeeList, \"F3wMA/Opv+flWMaT13DLRF7pU0k=\", false, function () {\n  return [useTable];\n});\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useTable","Filter","Table","Container","TableHeader","TableBody","TableData","TableHead","TableRow","Button","EmployeeList","Employee","setEmployee","fetchEmployees","response","get","catch","err","console","log","employees","data","columns","Header","accessor","employeesData","employeesColumns","Object","keys","filter","key","map","Cell","value","maxWidth","tableHooks","hooks","visibleColumns","push","id","row","alert","values","price","tableInstance","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","preFilteredRows","setFilter","state","isEven","idx","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps"],"sources":["/home/usmael/Desktop/React/simple-employee-management-system/src/pages/employeeList.js"],"sourcesContent":["\nimport React,{useState,useEffect,useMemo} from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport Filter from '../components/FilterTable';\n\nimport { Table,\n    Container,\n    TableHeader,TableBody,\n    TableData,TableHead,TableRow,Button\n\n } from '../components/table.style';\n\nconst EmployeeList = () => {\nconst [Employee, setEmployee] = useState([]);\nconst fetchEmployees = async() =>{\n    const response = await axios.get('https://63bdda61e348cb076204aebb.mockapi.io/api/v1/employee-data').catch(err=>console.log(err));\n    if (response){\n        const employees =response.data;\n        console.log(\"employees\",employees);\n\n        setEmployee(employees);\n    }\n\n};\n\n\nconst columns = useMemo (\n    () => [\n      {\n        Header: \"First Name\",\n        accessor: \"firstName\",\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"lastName\",\n      },\n      {\n        Header: \"Age\",\n        accessor: \"age\",\n      },\n      {\n        Header: \"Gender\",\n        accessor: \"Gender\",\n      },\n      {\n        Header: \"email\",\n        accessor: \"email\",\n      },\n    ],\n    []\n  );\nconst employeesData = useMemo (() => [...Employee], [Employee]);\n\nconst employeesColumns = useMemo(\n  () =>\n    Employee[0]\n      ? Object.keys(Employee[0])\n          .filter((key) => key !== \"rating\")\n          .map((key) => {\n            if (key === \"image\")\n              return {\n                Header: key,\n                accessor: key,\n                Cell: ({ value }) => <img src={value} />,\n                maxWidth: 70,\n              };\n\n            return { Header: key, accessor: key };\n          })\n      : [],\n  [Employee]\n);\n\nconst tableHooks = (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      ...columns,\n      {\n        id: \"Edit\",\n        Header: \"Edit\",\n        Cell: ({ row }) => (\n          <Button onClick={() => alert(\"Editing: \" + row.values.price)}>\n            Edit\n          </Button>\n        ),\n      },\n    ]);\n  };\n\nconst tableInstance = useTable(\n    {\n      columns: employeesColumns,\n      data: employeesData,\n    },\n    useGlobalFilter,\n    tableHooks,\n    useSortBy\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    preFilteredRows,\n    setFilter,\n    state,\n  } = tableInstance;\n\n\nuseEffect(() => {\n    fetchEmployees();\n}, []);\nconst isEven = (idx) => idx % 2 === 0;\n\n\n    return (\n        <>\n            <Container>\n                <h1>List of Employees</h1>\n               \n                    <Filter\n        preFilteredRows={preFilteredRows}\n        setFilter={setFilter}\n        Filter={state.Filter}\n      />\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableHeader\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  {column.render(\"Header\")}\n                  {column.isSorted ? (column.isSortedDesc ? \" ▼\" : \" ▲\") : \"\"}\n                </TableHeader>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, idx) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                className={isEven(idx) ? \"bg-green-400 bg-opacity-30\" : \"\"}\n              >\n                {row.cells.map((cell, idx) => (\n                  <TableData {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </TableData>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n            </Container>\n        </>\n    )\n}\n\nexport default EmployeeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}