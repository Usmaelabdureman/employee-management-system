[{"/home/usmael/Desktop/React/simple-employee-management-system/src/index.js":"1","/home/usmael/Desktop/React/simple-employee-management-system/src/reportWebVitals.js":"2","/home/usmael/Desktop/React/simple-employee-management-system/src/App.js":"3","/home/usmael/Desktop/React/simple-employee-management-system/src/App.style.js":"4","/home/usmael/Desktop/React/simple-employee-management-system/src/pages/employeeList.js":"5","/home/usmael/Desktop/React/simple-employee-management-system/src/components/table.style.js":"6","/home/usmael/Desktop/React/simple-employee-management-system/src/components/data.js":"7","/home/usmael/Desktop/React/simple-employee-management-system/src/components/FilterTable.jsx":"8"},{"size":540,"mtime":1673381253520,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1673370990360,"results":"11","hashOfConfig":"10"},{"size":308,"mtime":1673382786184,"results":"12","hashOfConfig":"10"},{"size":795,"mtime":1673382764276,"results":"13","hashOfConfig":"10"},{"size":5501,"mtime":1673391423948,"results":"14","hashOfConfig":"10"},{"size":1475,"mtime":1673389438232,"results":"15","hashOfConfig":"10"},{"size":331,"mtime":1673384234880,"results":"16","hashOfConfig":"10"},{"size":0,"mtime":1673389703072,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1stu4jt",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/usmael/Desktop/React/simple-employee-management-system/src/index.js",[],[],"/home/usmael/Desktop/React/simple-employee-management-system/src/reportWebVitals.js",[],[],"/home/usmael/Desktop/React/simple-employee-management-system/src/App.js",[],[],"/home/usmael/Desktop/React/simple-employee-management-system/src/App.style.js",[],[],"/home/usmael/Desktop/React/simple-employee-management-system/src/pages/employeeList.js",["44","45","46","47"],[],"\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useGlobalFilter, useSortBy, useTable } from \"react-table\";\nimport axios from 'axios';\nimport Filter from '../components/FilterTable';\n\nimport {\n    Table,\n    Container,\n    TableHeader, TableBody,\n    TableData, TableHead, TableRow, Button\n\n} from '../components/table.style';\n\nconst EmployeeList = (props) => {\n    const [Employee, setEmployee] = useState([]);\n    const fetchEmployees = async () => {\n        const response = await axios.get('https://63bdda61e348cb076204aebb.mockapi.io/api/v1/employee-data').catch(err => console.log(err));\n        if (response) {\n            const employees = response.data;\n            console.log(\"employees\", employees);\n\n            setEmployee(employees);\n        }\n\n    };\n\nconst data = useMemo( ()=>[\n{\n\"createdAt\": \"2023-01-10T19:54:03.502Z\",\n\"firstName\": \"Fletcher\",\n\"lastName\": \"Lynch\",\n\"age\": 95,\n\"Gender\": \"Two-spirit\",\n\"email\": \"Fausto_Kohler@gmail.com\",\n\"id\": \"1\"\n},{\n    \"createdAt\": \"2023-01-10T19:54:03.502Z\",\n    \"firstName\": \"Fletcher\",\n    \"lastName\": \"Lynch\",\n    \"age\": 95,\n    \"Gender\": \"Two-spirit\",\n    \"email\": \"Fausto_Kohler@gmail.com\",\n    \"id\": \"2\"\n    }\n]);\n\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: \"First Name\",\n                accessor: \"firstName\",\n            },\n            {\n                Header: \"Last Name\",\n                accessor: \"lastName\",\n            },\n            {\n                Header: \"Age\",\n                accessor: \"age\",\n            },\n            {\n                Header: \"Gender\",\n                accessor: \"Gender\",\n            },\n            {\n                Header: \"email\",\n                accessor: \"email\",\n            },\n        ],\n        []\n    );\n    const employeesData = useMemo(() => [...Employee], [Employee]);\n\n    const employeesColumns = useMemo(\n        () =>\n            Employee[0]\n                ? Object.keys(Employee[0])\n                    .filter((key) => key !== \"rating\")\n                    .map((key) => {\n                        if (key === \"image\")\n                            return {\n                                Header: key,\n                                accessor: key,\n                                Cell: ({ value }) => <img src={value} />,\n                                maxWidth: 70,\n                            };\n\n                        return { Header: key, accessor: key };\n                    })\n                : [],\n        [Employee]\n    );\n\n    const tableHooks = (hooks) => {\n        hooks.visibleColumns.push((columns) => [\n            ...columns,\n            {\n                id: \"Edit\",\n                Header: \"Edit\",\n                Cell: ({ row }) => (\n                    <Button onClick={() => alert(\"Editing: \" + row.values.price)}>\n                        Edit\n                    </Button>\n                ),\n            },\n        ]);\n    };\n\n    const tableInstance = useTable(\n        {\n            columns: employeesColumns,\n            data: employeesData,\n        },\n        useGlobalFilter,\n        tableHooks,\n        useSortBy\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        preFilteredRows,\n        setFilter,\n        state,\n    } = tableInstance;\n\n\n    useEffect(() => {\n        fetchEmployees();\n    }, []);\n    const isEven = (idx) => idx % 2 === 0;\n\n\n    return (\n        <>\n            <Container>\n                <h1>List of Employees</h1>\n\n                <Filter\n                    preFilteredRows={preFilteredRows}\n                    setFilter={setFilter}\n                    Filter={state.Filter}\n                />\n                <Table {...getTableProps()}>\n                    <TableHead>\n                        {headerGroups.map((headerGroup) => (\n                            <TableRow {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <TableHeader\n                                        {...column.getHeaderProps(column.getSortByToggleProps())}\n                                    >\n                                        {column.render(\"Header\")}\n                                        {column.isSorted ? (column.isSortedDesc ? \" ▼\" : \" ▲\") : \"\"}\n                                    </TableHeader>\n                                ))}\n                            </TableRow>\n                        ))}\n                    </TableHead>\n                    <TableBody {...getTableBodyProps()}>\n                        {rows.map((row, idx) => {\n                            prepareRow(row);\n\n                            return (\n                                <TableRow\n                                    {...row.getRowProps()}\n                                    className={isEven(idx) ? \"background-color:lightblue\" : \"\"}\n                                >\n                                    {row.cells.map((cell, idx) => (\n                                        <TableData {...cell.getCellProps()}>\n                                            {cell.render(\"Cell\")}\n                                        </TableData>\n                                    ))}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n\n            </Container>\n        </>\n    )\n}\n\nexport default EmployeeList;","/home/usmael/Desktop/React/simple-employee-management-system/src/components/table.style.js",["48"],[],"\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  text-align: center;\n  width:960px;\n  padding: 10px;\n  `\nconst StyledTable = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    th{\n      border-bottom:1px #dddddd solid;\n      text-align: left;\n      padding: 8px;\n    }\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n    tbody tr {\n    :nth-of-type(odd) {\n      background-color: #efefef;\n    }\n    :hover {\n      background-color: lightpink;\n    }\n  }\n  thead > tr {\n    background-color: #c2c2c2;\n  }\n  caption {\n    font-size: 0.9em;\n    padding: 5px;\n    font-weight: bold;\n  }\n  }\n`\nconst Table = styled.table`\n  table-layout :fixed ;\n  text-align: center;\n  width: auto;\n`\n\nconst TableHead = styled.thead`\n  padding:2px;\n`\n\nconst TableRow = styled.tr`\nborder-color: green;\n\n`\n\nconst TableHeader = styled.th`\nborder-color: green;\npadding: 2px;\n`\n\nconst TableBody = styled.tbody`\n`\n\nconst TableData = styled.td`\npadding: 5px;\n`\n\nconst Button = styled.button`\n  padding-left: 2px;\n  padding-right: 4px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  color: black;\n  border-radius:10;\n  background-color: green;\n  :hover{\n    background-color: lightgreen;\n    transition: all;\n  }\n\n`;\nexport { Container, Table, TableBody,TableData,TableHead,TableHeader,TableRow,Button}\n","/home/usmael/Desktop/React/simple-employee-management-system/src/components/data.js",[],[],"/home/usmael/Desktop/React/simple-employee-management-system/src/components/FilterTable.jsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":28,"column":7,"nodeType":"51","messageId":"52","endLine":28,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":28,"column":14,"nodeType":"51","endLine":28,"endColumn":21},{"ruleId":"49","severity":1,"message":"55","line":49,"column":11,"nodeType":"51","messageId":"52","endLine":49,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":86,"column":54,"nodeType":"58","endLine":86,"endColumn":73},{"ruleId":"49","severity":1,"message":"59","line":8,"column":7,"nodeType":"51","messageId":"52","endLine":8,"endColumn":18},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'columns' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledTable' is assigned a value but never used."]